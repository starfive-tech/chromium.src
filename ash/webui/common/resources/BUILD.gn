# Copyright 2021 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/chromeos/ui_mode.gni")
import("//third_party/closure_compiler/compile_js.gni")
import("//tools/grit/grit_rule.gni")
import("//tools/grit/preprocess_if_expr.gni")
import("//tools/polymer/css_to_wrapper.gni")
import("//tools/polymer/html_to_wrapper.gni")
import("//tools/typescript/ts_definitions.gni")
import("//ui/webui/resources/tools/generate_grd.gni")

assert(is_chromeos_ash)

preprocessed_dir = "preprocessed"
preprocessed_manifest = "preprocessed_manifest.json"

web_component_files = [
  "cr_picture/cr_camera.js",
  "cr_picture/cr_picture_list.js",
  "cr_picture/cr_picture_pane.js",
  "keyboard_diagram.js",
  "keyboard_key.js",
  "navigation_selector.js",
  "navigation_view_panel.js",
  "page_toolbar.js",
]

non_web_component_files = [
  "cr_picture/cr_picture_types.js",
  "cr_picture/png.js",
  "cr_picture/webcam_utils.js",
]

icons_html_files = [
  "keyboard_icons.html",
  "navigation_icons.html",
  "cr_picture/icons.html",
]

# Files that are passed as input to html_to_wrapper().
html_files = []
foreach(f, web_component_files) {
  html_files += [ string_replace(f, ".js", ".html") ]
}

# Files that are generated by html_to_wrapper().
html_wrapper_files = []
foreach(f, html_files + icons_html_files) {
  html_wrapper_files += [ f + ".js" ]
}

css_files = [ "navigation_shared_vars.css" ]

# Files that are generated by css_to_wrapper().
css_wrapper_files = []
foreach(f, css_files) {
  css_wrapper_files += [ f + ".js" ]
}

preprocess_if_expr("preprocess") {
  in_folder = "."
  out_folder = "$target_gen_dir/$preprocessed_dir"
  out_manifest = "$target_gen_dir/$preprocessed_manifest"
  in_files = non_web_component_files + web_component_files + icons_html_files +
             html_files + css_files
}

html_to_wrapper("html_wrapper_files") {
  deps = [ ":preprocess" ]
  in_folder = "$target_gen_dir/$preprocessed_dir"
  out_folder = "$target_gen_dir/$preprocessed_dir"
  in_files = html_files + icons_html_files
  use_js = true
}

css_to_wrapper("css_wrapper_files") {
  deps = [ ":preprocess" ]
  in_folder = "$target_gen_dir/$preprocessed_dir"
  out_folder = "$target_gen_dir/$preprocessed_dir"
  in_files = css_files
  use_js = true
}

generate_grd("build_html_css_wrapper_files_grdp") {
  input_files = html_wrapper_files + css_wrapper_files
  input_files_base_dir =
      rebase_path("$target_gen_dir/$preprocessed_dir", root_build_dir)
  public_deps = [
    ":css_wrapper_files",
    ":html_wrapper_files",
  ]
  grd_prefix = "ash_common"
  out_grd = "$target_gen_dir/html_css_wrapper_files_resources.grdp"
  resource_path_prefix = "ash/common"
}

generate_grd("build_grdp") {
  input_files = [
    "fake_method_resolver.js",
    "fake_observables.js",
    "keyboard_layouts.js",
    "mojo_utils.js",
  ]
  input_files_base_dir = rebase_path(".", "//")
  public_deps = [ ":preprocess" ]
  manifest_files = [ "$target_gen_dir/$preprocessed_manifest" ]
  grd_prefix = "ash_common"
  out_grd = "$target_gen_dir/${grd_prefix}_resources.grdp"
  resource_path_prefix = "ash/common"
}

generate_definitions_js_files = [
  "cr_picture/cr_camera.html.js",
  "cr_picture/cr_camera.js",
  "cr_picture/cr_picture_list.html.js",
  "cr_picture/cr_picture_list.js",
  "cr_picture/cr_picture_pane.html.js",
  "cr_picture/cr_picture_pane.js",
  "cr_picture/cr_picture_types.js",
  "cr_picture/icons.html.js",
  "cr_picture/png.js",
  "cr_picture/webcam_utils.js",
]

ts_definitions("generate_definitions") {
  root_dir = "$target_gen_dir/$preprocessed_dir"
  out_dir = "$target_gen_dir/$preprocessed_dir"
  js_files = generate_definitions_js_files
  extra_deps = [
    ":css_wrapper_files",
    ":html_wrapper_files",
    ":preprocess",
    "//ui/webui/resources:library",
  ]
}

checked_in_dts_files = [
  "page_toolbar.d.ts",
  "navigation_view_panel.d.ts",
  "navigation_selector.d.ts",
]

copy("copy_checked_in_dts_files") {
  sources = checked_in_dts_files
  outputs = [ "$target_gen_dir/$preprocessed_dir/{{source_target_relative}}" ]
}

group("closure_compile") {
  deps = [
    ":closure_compile_local",
    "cr_picture:closure_compile_module",
  ]
}

js_type_check("closure_compile_local") {
  is_polymer3 = true
  deps = [
    ":fake_method_resolver",
    ":fake_observables",
    ":keyboard_diagram",
    ":keyboard_key",
    ":keyboard_layouts",
    ":mojo_utils",
    ":navigation_selector",
    ":navigation_view_panel",
    ":page_toolbar",
  ]
}

js_library("fake_observables") {
  deps = [ "//ui/webui/resources/js:cr.m" ]
}

js_library("fake_method_resolver") {
  deps = [ "//ui/webui/resources/js:cr.m" ]
}

js_library("keyboard_diagram") {
  deps = [
    ":keyboard_key",
    ":keyboard_layouts",
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
    "//ui/webui/resources/js:i18n_behavior.m",
  ]
}

js_library("keyboard_key") {
  deps = [
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
    "//ui/webui/resources/js:i18n_behavior.m",
  ]
}

js_library("keyboard_layouts") {
  sources = [ "keyboard_layouts.js" ]
}

js_library("mojo_utils") {
  deps = [ "//ash/webui/common/mojom:mojom_js_library_for_compile" ]
}

js_library("navigation_selector") {
  deps = [
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
  ]
}

js_library("navigation_view_panel") {
  deps = [
    ":navigation_selector",
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
  ]
}

js_library("page_toolbar") {
  deps = [
    "//third_party/polymer/v3_0/components-chromium/polymer:polymer_bundled",
  ]
}
