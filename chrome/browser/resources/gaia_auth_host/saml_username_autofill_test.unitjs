// Copyright 2022 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

GEN_INCLUDE([
    '//ui/webui/resources/js/cr.js',
    '//ui/webui/resources/js/util.js',
    'saml_username_autofill.js'
]);

const IDP_URL_FOR_TESTS = 'https://login.corp.example.com/example';

const IDP_URL_FOR_TESTS_WITH_PARAMETER = 'https://login.corp.example.com/example?name=value';

const EMAIL_FOR_TESTS = 'example@domain.com';

SamlUsernameAutofillUnitTest = class extends testing.Test {
  /** @override */
  testGenCppIncludes() {
    GEN(`#include "content/public/test/browser_test.h"`);
  }

  /** @override */
  get browsePreload() {
    return DUMMY_URL;
  }
}

// Test success for IdP url without parameters.
TEST_F('SamlUsernameAutofillUnitTest', 'SuccessNoParams', function () {
  const urlParameterNameToAutofillUsername = 'login_hint';
  const expectedResult = appendParam(IDP_URL_FOR_TESTS,
     urlParameterNameToAutofillUsername, EMAIL_FOR_TESTS);
  const newUrl = samlUsernameAutofill.maybeAutofillUsername(IDP_URL_FOR_TESTS,
     urlParameterNameToAutofillUsername, EMAIL_FOR_TESTS);

  assertEquals(newUrl, expectedResult);
});

// Test success for IdP url with a parameter.
TEST_F('SamlUsernameAutofillUnitTest', 'SuccessWithParam', function () {
  const urlParameterNameToAutofillUsername = 'login_hint';
  const expectedResult = appendParam(IDP_URL_FOR_TESTS_WITH_PARAMETER,
     urlParameterNameToAutofillUsername, EMAIL_FOR_TESTS);
  const newUrl = samlUsernameAutofill.maybeAutofillUsername(
     IDP_URL_FOR_TESTS_WITH_PARAMETER, urlParameterNameToAutofillUsername,
     EMAIL_FOR_TESTS);

  assertEquals(newUrl, expectedResult);
});

// Test that we don't autofill the username when user's email is absent.
TEST_F('SamlUsernameAutofillUnitTest', 'NoEmail', function () {
  const newUrl = samlUsernameAutofill.maybeAutofillUsername(
      IDP_URL_FOR_TESTS, 'login_hint', '');

  assertEquals(newUrl, null);
});

// Test that we don't autofill the username when we don't know the appropriate
// url parameter.
TEST_F('SamlUsernameAutofillUnitTest', 'NoUrlParameter', function () {
  const newUrl = samlUsernameAutofill.maybeAutofillUsername(
      IDP_URL_FOR_TESTS, '', EMAIL_FOR_TESTS);

  assertEquals(newUrl, null);
});

// Test that we don't autofill the username when login page doesn't use https.
TEST_F('SamlUsernameAutofillUnitTest', 'HttpLoginPage', function () {
  const httpUrl = 'http://login.corp.example.com/example';
  const newUrl = samlUsernameAutofill.maybeAutofillUsername(
      httpUrl, 'login_hint', EMAIL_FOR_TESTS);

  assertEquals(newUrl, null);
});
