# Copyright 2021 The Chromium Authors
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

static_library("metrics_data_collection") {
  sources = [
    "configured_sampler.cc",
    "configured_sampler.h",
    "event_driven_telemetry_sampler_pool.h",
    "metric_data_collector.cc",
    "metric_data_collector.h",
    "metric_event_observer_manager.cc",
    "metric_event_observer_manager.h",
    "metric_rate_controller.cc",
    "metric_rate_controller.h",
    "metric_report_queue.cc",
    "metric_report_queue.h",
    "metric_reporting_controller.cc",
    "metric_reporting_controller.h",
    "multi_samplers_collector.cc",
    "multi_samplers_collector.h",
    "reporting_settings.h",
    "sampler.h",
  ]
  deps = [
    "//base",
    "//components/reporting/client:report_queue",
    "//components/reporting/proto:metric_data_proto",
    "//components/reporting/proto:record_constants",
    "//components/reporting/util:status",
  ]
}

static_library("test_support") {
  testonly = true
  sources = [
    "fake_event_driven_telemetry_sampler_pool.cc",
    "fake_event_driven_telemetry_sampler_pool.h",
    "fake_metric_report_queue.cc",
    "fake_metric_report_queue.h",
    "fake_reporting_settings.cc",
    "fake_reporting_settings.h",
    "fake_sampler.cc",
    "fake_sampler.h",
  ]
  deps = [
    ":metrics_data_collection",
    "//base",
    "//components/reporting/client:report_queue",
    "//components/reporting/proto:metric_data_proto",
    "//components/reporting/proto:record_constants",
    "//components/reporting/util:status",
    "//testing/gtest",
  ]
}

source_set("unit_tests") {
  testonly = true
  sources = [
    "configured_sampler_unittest.cc",
    "metric_data_collector_unittest.cc",
    "metric_event_observer_manager_unittest.cc",
    "metric_rate_controller_unittest.cc",
    "metric_report_queue_unittest.cc",
    "metric_reporting_controller_unittest.cc",
    "multi_samplers_collector_unittest.cc",
  ]
  deps = [
    ":metrics_data_collection",
    ":test_support",
    "//base",
    "//base/test:test_support",
    "//components/reporting/client:report_queue",
    "//components/reporting/client:test_support",
    "//components/reporting/proto:metric_data_proto",
    "//components/reporting/proto:record_constants",
    "//components/reporting/util:status",
    "//testing/gmock",
    "//testing/gtest",
  ]
}
