This is a testharness.js-based test.
Found 144 tests; 0 PASS, 144 FAIL, 0 TIMEOUT, 0 NOTRUN.
FAIL sRGB all numbers assert_equals: expected "color(srgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL sRGB all percent assert_equals: expected "color(srgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL sRGB mixed number and percent assert_equals: expected "color(srgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL sRGB mixed number and percent 2 assert_equals: expected "color(srgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL sRGB all none assert_equals: expected "color(srgb 0 0 0)" but got "rgb(0, 0, 0)"
FAIL sRGB number and none assert_equals: expected "color(srgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL sRGB percent and none assert_equals: expected "color(srgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL sRGB number, percent and none assert_equals: expected "color(srgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, all numbers assert_equals: expected "color(srgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, all percent assert_equals: expected "color(srgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, mixed number and percent assert_equals: expected "color(srgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, mixed number and percent 2 assert_equals: expected "color(srgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, all none assert_equals: expected "color(srgb 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, number and none assert_equals: expected "color(srgb 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, percent and none assert_equals: expected "color(srgb 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL sRGB with alpha, number, percent and none assert_equals: expected "color(srgb 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB all numbers assert_equals: expected "color(srgb-linear 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB all percent assert_equals: expected "color(srgb-linear 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB mixed number and percent assert_equals: expected "color(srgb-linear 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB mixed number and percent 2 assert_equals: expected "color(srgb-linear 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB all none assert_equals: expected "color(srgb-linear 0 0 0)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB number and none assert_equals: expected "color(srgb-linear 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB percent and none assert_equals: expected "color(srgb-linear 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB number, percent and none assert_equals: expected "color(srgb-linear 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, all numbers assert_equals: expected "color(srgb-linear 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, all percent assert_equals: expected "color(srgb-linear 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, mixed number and percent assert_equals: expected "color(srgb-linear 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, mixed number and percent 2 assert_equals: expected "color(srgb-linear 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, all none assert_equals: expected "color(srgb-linear 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, number and none assert_equals: expected "color(srgb-linear 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, percent and none assert_equals: expected "color(srgb-linear 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL Linear-light sRGB with alpha, number, percent and none assert_equals: expected "color(srgb-linear 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL Display P3 all numbers assert_equals: expected "color(display-p3 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Display P3 all percent assert_equals: expected "color(display-p3 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Display P3 mixed number and percent assert_equals: expected "color(display-p3 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Display P3 mixed number and percent 2 assert_equals: expected "color(display-p3 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Display P3 all none assert_equals: expected "color(display-p3 0 0 0)" but got "rgb(0, 0, 0)"
FAIL Display P3 number and none assert_equals: expected "color(display-p3 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Display P3 percent and none assert_equals: expected "color(display-p3 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Display P3 number, percent and none assert_equals: expected "color(display-p3 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, all numbers assert_equals: expected "color(display-p3 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, all percent assert_equals: expected "color(display-p3 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, mixed number and percent assert_equals: expected "color(display-p3 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, mixed number and percent 2 assert_equals: expected "color(display-p3 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, all none assert_equals: expected "color(display-p3 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, number and none assert_equals: expected "color(display-p3 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, percent and none assert_equals: expected "color(display-p3 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL Display P3 with alpha, number, percent and none assert_equals: expected "color(display-p3 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL A98 RGB all numbers assert_equals: expected "color(a98-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL A98 RGB all percent assert_equals: expected "color(a98-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL A98 RGB mixed number and percent assert_equals: expected "color(a98-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL A98 RGB mixed number and percent 2 assert_equals: expected "color(a98-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL A98 RGB all none assert_equals: expected "color(a98-rgb 0 0 0)" but got "rgb(0, 0, 0)"
FAIL A98 RGB number and none assert_equals: expected "color(a98-rgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL A98 RGB percent and none assert_equals: expected "color(a98-rgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL A98 RGB number, percent and none assert_equals: expected "color(a98-rgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, all numbers assert_equals: expected "color(a98-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, all percent assert_equals: expected "color(a98-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, mixed number and percent assert_equals: expected "color(a98-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, mixed number and percent 2 assert_equals: expected "color(a98-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, all none assert_equals: expected "color(a98-rgb 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, number and none assert_equals: expected "color(a98-rgb 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, percent and none assert_equals: expected "color(a98-rgb 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL A98 RGB with alpha, number, percent and none assert_equals: expected "color(a98-rgb 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB all numbers assert_equals: expected "color(prophoto-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB all percent assert_equals: expected "color(prophoto-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB mixed number and percent assert_equals: expected "color(prophoto-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB mixed number and percent 2 assert_equals: expected "color(prophoto-rgb 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB all none assert_equals: expected "color(prophoto-rgb 0 0 0)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB number and none assert_equals: expected "color(prophoto-rgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB percent and none assert_equals: expected "color(prophoto-rgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB number, percent and none assert_equals: expected "color(prophoto-rgb 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, all numbers assert_equals: expected "color(prophoto-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, all percent assert_equals: expected "color(prophoto-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, mixed number and percent assert_equals: expected "color(prophoto-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, mixed number and percent 2 assert_equals: expected "color(prophoto-rgb 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, all none assert_equals: expected "color(prophoto-rgb 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, number and none assert_equals: expected "color(prophoto-rgb 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, percent and none assert_equals: expected "color(prophoto-rgb 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL ProPhoto RGB with alpha, number, percent and none assert_equals: expected "color(prophoto-rgb 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 all numbers assert_equals: expected "color(rec2020 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 all percent assert_equals: expected "color(rec2020 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 mixed number and percent assert_equals: expected "color(rec2020 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 mixed number and percent 2 assert_equals: expected "color(rec2020 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 all none assert_equals: expected "color(rec2020 0 0 0)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 number and none assert_equals: expected "color(rec2020 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 percent and none assert_equals: expected "color(rec2020 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 number, percent and none assert_equals: expected "color(rec2020 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, all numbers assert_equals: expected "color(rec2020 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, all percent assert_equals: expected "color(rec2020 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, mixed number and percent assert_equals: expected "color(rec2020 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, mixed number and percent 2 assert_equals: expected "color(rec2020 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, all none assert_equals: expected "color(rec2020 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, number and none assert_equals: expected "color(rec2020 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, percent and none assert_equals: expected "color(rec2020 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL Rec BT.2020 with alpha, number, percent and none assert_equals: expected "color(rec2020 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 all numbers assert_equals: expected "color(xyz-d50 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 all percent assert_equals: expected "color(xyz-d50 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 mixed number and percent assert_equals: expected "color(xyz-d50 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 mixed number and percent 2 assert_equals: expected "color(xyz-d50 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 all none assert_equals: expected "color(xyz-d50 0 0 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 number and none assert_equals: expected "color(xyz-d50 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 percent and none assert_equals: expected "color(xyz-d50 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 number, percent and none assert_equals: expected "color(xyz-d50 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, all numbers assert_equals: expected "color(xyz-d50 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, all percent assert_equals: expected "color(xyz-d50 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, mixed number and percent assert_equals: expected "color(xyz-d50 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, mixed number and percent 2 assert_equals: expected "color(xyz-d50 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, all none assert_equals: expected "color(xyz-d50 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, number and none assert_equals: expected "color(xyz-d50 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, percent and none assert_equals: expected "color(xyz-d50 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D50 with alpha, number, percent and none assert_equals: expected "color(xyz-d50 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 all numbers assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 all percent assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 mixed number and percent assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 mixed number and percent 2 assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 all none assert_equals: expected "color(xyz-d65 0 0 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 number and none assert_equals: expected "color(xyz-d65 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 percent and none assert_equals: expected "color(xyz-d65 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 number, percent and none assert_equals: expected "color(xyz-d65 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, all numbers assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, all percent assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, mixed number and percent assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, mixed number and percent 2 assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, all none assert_equals: expected "color(xyz-d65 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, number and none assert_equals: expected "color(xyz-d65 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, percent and none assert_equals: expected "color(xyz-d65 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ D65 with alpha, number, percent and none assert_equals: expected "color(xyz-d65 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) all numbers assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) all percent assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) mixed number and percent assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) mixed number and percent 2 assert_equals: expected "color(xyz-d65 1 0.5 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) all none assert_equals: expected "color(xyz-d65 0 0 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) number and none assert_equals: expected "color(xyz-d65 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) percent and none assert_equals: expected "color(xyz-d65 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) number, percent and none assert_equals: expected "color(xyz-d65 1 0 0.2)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, all numbers assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, all percent assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, mixed number and percent assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, mixed number and percent 2 assert_equals: expected "color(xyz-d65 1 0.5 0.2 / 0.6)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, all none assert_equals: expected "color(xyz-d65 0 0 0 / 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, number and none assert_equals: expected "color(xyz-d65 1 0 0.2 / 0)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, percent and none assert_equals: expected "color(xyz-d65 1 0 0.2 / 0.3)" but got "rgb(0, 0, 0)"
FAIL CIE XYZ (implicit D65) with alpha, number, percent and none assert_equals: expected "color(xyz-d65 1 0 0.2 / 0.237)" but got "rgb(0, 0, 0)"
Harness: the test ran to completion.

