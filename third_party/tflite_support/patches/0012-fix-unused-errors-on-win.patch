From 07922e43eaa66d2ebc8ff59db147b67e49d0694d Mon Sep 17 00:00:00 2001
From: Clark DuVall <cduvall@chromium.org>
Date: Wed, 21 Sep 2022 13:36:28 -0700
Subject: [PATCH 12/12] fix unused errors on win

---
 .../cc/task/core/external_file_handler.cc          | 14 ++++++--------
 .../cc/task/core/external_file_handler.h           |  2 ++
 2 files changed, 8 insertions(+), 8 deletions(-)

diff --git a/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.cc b/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.cc
index 7aed2f10ed87a..e7197665b5e8b 100644
--- a/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.cc
+++ b/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.cc
@@ -53,19 +53,17 @@ using ::tflite::support::TfLiteSupportStatus;
 // Gets the offset aligned to page size for mapping given files into memory by
 // file descriptor correctly, as according to mmap(2), the offset used in mmap
 // must be a multiple of sysconf(_SC_PAGE_SIZE).
+// mmap is not used on Windows
+#ifndef _WIN32
 int64 GetPageSizeAlignedOffset(int64 offset) {
-#ifdef _WIN32
-  // mmap is not used on Windows
-  return -1;
-#else
   int64 aligned_offset = offset;
   int64 page_size = sysconf(_SC_PAGE_SIZE);
   if (offset % page_size != 0) {
     aligned_offset = offset / page_size * page_size;
   }
   return aligned_offset;
-#endif
 }
+#endif
 
 }  // namespace
 
@@ -83,15 +81,15 @@ ExternalFileHandler::CreateFromExternalFile(const ExternalFile* external_file) {
 }
 
 absl::Status ExternalFileHandler::MapExternalFile() {
+  if (!external_file_.file_content().empty()) {
+    return absl::OkStatus();
+  }
 // TODO(b/195588083): Add Windows support
 #ifdef _WIN32
   return CreateStatusWithPayload(StatusCode::kFailedPrecondition,
                                  "File loading is not yet supported on Windows",
                                  TfLiteSupportStatus::kFileReadError);
 #else
-  if (!external_file_.file_content().empty()) {
-    return absl::OkStatus();
-  }
   if (external_file_.file_name().empty() &&
       !external_file_.has_file_descriptor_meta()) {
     return CreateStatusWithPayload(
diff --git a/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.h b/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.h
index 0b74e468d004f..3dbb91909df4e 100644
--- a/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.h
+++ b/third_party/tflite_support/src/tensorflow_lite_support/cc/task/core/external_file_handler.h
@@ -82,9 +82,11 @@ class ExternalFileHandler {
 
   // The aligned mapped memory buffer offset, if any.
   int64 buffer_aligned_offset_{};
+#ifndef _WIN32
   // The aligned mapped memory buffer size in bytes taking into account the
   // offset shift introduced by buffer_aligned_memory_offset_, if any.
   int64 buffer_aligned_size_{};
+#endif
 };
 
 }  // namespace core
-- 
2.37.3.998.g577e59143f-goog

